{"version":3,"sources":["../../src/support/Maps.jsx","../../src/fields/TypeOption.jsx","../../src/fields/TypeMultipleOption.jsx","../../src/fields/TypeDate.jsx","../../src/fields/TypeCascade.jsx","../../src/fields/TypeNumber.jsx","../../src/fields/TypeInput.jsx","../../src/fields/TypeText.jsx","../../src/index.js","App.js","index.js"],"names":["DefaultIcon","iconUrl","shadowUrl","iconShadow","L","defaultCenter","lat","lng","DraggableMarker","changePos","position","markerRef","useRef","eventHandlers","useMemo","dragend","marker","newPos","useMapEvents","click","e","ref","draggable","MapRef","center","useMap","map","Maps","form","id","useState","setPosition","console","onChange","cname","parseFloat","justify","style","marginBottom","span","paddingRight","placeholder","width","value","min","max","paddingLeft","className","zoom","scrollWheelZoom","height","attribution","url","TypeOption","option","name","keyform","required","rules","key","label","direction","o","allowClear","TypeMultipleOption","mode","TypeDate","TypeCascade","cascade","options","TypeNumber","TypeInput","sytle","TypeText","row","QuestionFields","index","field","Question","fields","validator","Promise","Error","rule","type","mapRules","setValue","disabled","hidden","noStyle","shouldUpdate","prevValues","x","currentValues","getFieldValue","dependency","valid","validateDependency","unmatches","Webform","forms","onFinish","Form","layout","scrollToFirstError","onValuesChange","setTimeout","fr","values","all","filled","Object","current","progress","title","g","htmlType","formData","administration","App","log","data","keys","v","question","parseInt","filter","fontSize","src","theme","displayDataTypes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2da39ede.chunk.js","sourcesContent":["import React, { useState, useRef, useMemo } from 'react'\nimport L from 'leaflet'\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  useMapEvents,\n  useMap\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport icon from 'leaflet/dist/images/marker-icon.png'\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'\nimport { Row, Col, InputNumber } from 'antd'\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n})\n\nL.Marker.prototype.options.icon = DefaultIcon\n\nconst defaultCenter = {\n  lat: 0,\n  lng: 0\n}\n\nconst DraggableMarker = ({ changePos, position }) => {\n  const markerRef = useRef(null)\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current\n        if (marker != null) {\n          const newPos = marker.getLatLng()\n          changePos(newPos)\n        }\n      }\n    }),\n    []\n  )\n\n  useMapEvents({\n    click(e) {\n      const newPos = e.latlng\n      changePos(newPos)\n    }\n  })\n\n  if (!position?.lat && !position?.lng) {\n    return ''\n  }\n\n  return (\n    <Marker\n      eventHandlers={eventHandlers}\n      position={position}\n      ref={markerRef}\n      draggable\n    />\n  )\n}\n\nconst MapRef = ({ center }) => {\n  const map = useMap()\n  map.panTo(center)\n  return null\n}\n\nconst Maps = ({ form, id, setValue, center }) => {\n  const [position, setPosition] = useState({ lat: null, lng: null })\n\n  const changePos = (newPos) => {\n    setPosition(newPos)\n    if (newPos?.lat && newPos?.lng) {\n      console.log(form)\n      form.setFieldsValue({ [id]: newPos })\n    }\n  }\n\n  const onChange = (cname, e) => {\n    changePos({ ...position, [cname]: parseFloat(e) })\n  }\n\n  return (\n    <div>\n      <Row justify='space-between' style={{ marginBottom: '10px' }}>\n        <Col span={12} style={{ paddingRight: '10px' }}>\n          <InputNumber\n            placeholder='Latitude'\n            style={{ width: '100%' }}\n            value={position?.lat || null}\n            min='-90'\n            max='90'\n            onChange={(e) => onChange('lat', e)}\n          />\n        </Col>\n        <Col span={12} style={{ paddingLeft: '10px' }}>\n          <InputNumber\n            placeholder='Longitude'\n            className='site-input-right'\n            style={{ width: '100%' }}\n            value={position?.lng || null}\n            min='-180'\n            max='180'\n            onChange={(e) => onChange('lng', e)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <MapContainer\n            zoom={13}\n            scrollWheelZoom={false}\n            style={{ height: '300px', width: '100%' }}\n          >\n            <MapRef\n              center={\n                position?.lat && position?.lng\n                  ? position\n                  : center || defaultCenter\n              }\n            />\n            <TileLayer\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            <DraggableMarker\n              form={form}\n              id={id}\n              changePos={changePos}\n              position={position}\n            />\n          </MapContainer>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Maps\n","import React from 'react'\nimport { Space, Form, Radio, Select } from 'antd'\n\nconst TypeOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      {option.length < 3 ? (\n        <Radio.Group>\n          <Space direction='vertical'>\n            {option.map((o, io) => (\n              <Radio key={io} value={o.name}>\n                {o.name}\n              </Radio>\n            ))}\n          </Space>\n        </Radio.Group>\n      ) : (\n        <Select style={{ width: '100%' }} allowClear>\n          {option.map((o, io) => (\n            <Select.Option key={io} value={o.name}>\n              {o.name}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n    </Form.Item>\n  )\n}\n\nexport default TypeOption\n","import React from 'react'\nimport { Form, Select } from 'antd'\n\nconst TypeMultipleOption = ({ option, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Select mode='multiple' style={{ width: '100%' }}>\n        {option.map((o, io) => (\n          <Select.Option key={io} value={o.name}>\n            {o.name}\n          </Select.Option>\n        ))}\n      </Select>\n    </Form.Item>\n  )\n}\n\nexport default TypeMultipleOption\n","import React from 'react'\nimport { Form, DatePicker } from 'antd'\n\nconst TypeDate = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <DatePicker style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeDate\n","import React from 'react'\nimport { Form, Cascader } from 'antd'\n\nconst TypeCascade = ({ cascade, id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Cascader options={cascade} />\n    </Form.Item>\n  )\n}\n\nexport default TypeCascade\n","import React from 'react'\nimport { Form, InputNumber } from 'antd'\n\nconst TypeNumber = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <InputNumber style={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeNumber\n","import React from 'react'\nimport { Form, Input } from 'antd'\n\nconst TypeInput = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <Input sytle={{ width: '100%' }} />\n    </Form.Item>\n  )\n}\n\nexport default TypeInput\n","import React from 'react'\nimport { Form } from 'antd'\nimport TextArea from 'antd/lib/input/TextArea'\n\nconst TypeText = ({ id, name, keyform, required, rules }) => {\n  return (\n    <Form.Item\n      key={keyform}\n      name={id}\n      label={`${keyform + 1}. ${name}`}\n      rules={rules}\n      required={required}\n    >\n      <TextArea row={4} />\n    </Form.Item>\n  )\n}\n\nexport default TypeText\n","import React, { useState } from 'react'\nimport { Row, Col, Card, Button, Form, Input } from 'antd'\nimport Maps from './support/Maps'\nimport 'antd/dist/antd.css'\nimport './styles.module.css'\nimport TypeOption from './fields/TypeOption'\nimport TypeMultipleOption from './fields/TypeMultipleOption'\nimport TypeDate from './fields/TypeDate'\nimport TypeCascade from './fields/TypeCascade'\nimport TypeNumber from './fields/TypeNumber'\nimport TypeInput from './fields/TypeInput'\nimport TypeText from './fields/TypeText'\n\nconst mapRules = ({ rule, type }) => {\n  if (type === 'number') {\n    return [{ ...rule, type: 'number' }]\n  }\n  return [{}]\n}\n\nconst QuestionFields = ({ rules, cascade, form, index, field }) => {\n  switch (field.type) {\n    case 'option':\n      return <TypeOption keyform={index} rules={rules} {...field} />\n    case 'multiple_option':\n      return <TypeMultipleOption keyform={index} rules={rules} {...field} />\n    case 'cascade':\n      return (\n        <TypeCascade\n          keyform={index}\n          cascade={cascade[field.option]}\n          rules={rules}\n          {...field}\n        />\n      )\n    case 'date':\n      return <TypeDate keyform={index} rules={rules} {...field} />\n    case 'number':\n      return <TypeNumber keyform={index} rules={rules} {...field} />\n    case 'text':\n      return <TypeText keyform={index} rules={rules} {...field} />\n    default:\n      return <TypeInput keyform={index} rules={rules} {...field} />\n  }\n}\n\nconst validateDependency = (dependency, value) => {\n  if (dependency?.options) {\n    return dependency.options.includes(value)\n  }\n  let valid = false\n  if (dependency?.min) {\n    valid = value >= dependency.min\n  }\n  if (dependency?.max) {\n    valid = value <= dependency.max\n  }\n  return valid\n}\n\nconst Question = ({ fields, cascade, form }) => {\n  return fields.map((field, key) => {\n    let rules = []\n    if (field?.required) {\n      rules = [\n        {\n          validator: (_, value) =>\n            value\n              ? Promise.resolve()\n              : Promise.reject(new Error(`${field.name} is required`))\n        }\n      ]\n    }\n    if (field?.rule) {\n      rules = [...rules, ...mapRules(field)]\n    }\n    const [value, setValue] = useState(null)\n    if (field?.type === 'geo') {\n      return (\n        <Col key={key}>\n          <Form.Item\n            name={field.id}\n            label={`${key + 1}. ${field.name}`}\n            rules={rules}\n            required={field?.required}\n          >\n            <Input value={value} disabled hidden />\n          </Form.Item>\n          <Maps\n            form={form}\n            setValue={setValue}\n            id={field.id}\n            center={field.center}\n          />\n        </Col>\n      )\n    }\n    if (field?.dependency) {\n      return (\n        <Form.Item\n          noStyle\n          key={key}\n          shouldUpdate={(prevValues, currentValues) => {\n            const update = field.dependency\n              .map((x) => prevValues[x.id] !== currentValues[x.id])\n              .filter((x) => x === true)\n            return update.length\n          }}\n        >\n          {({ getFieldValue }) => {\n            const unmatches = field.dependency\n              .map((x) => validateDependency(x, getFieldValue(x.id)))\n              .filter((x) => x === false)\n            return unmatches.length ? null : (\n              <QuestionFields\n                rules={rules}\n                form={form}\n                index={key}\n                cascade={cascade}\n                field={field}\n              />\n            )\n          }}\n        </Form.Item>\n      )\n    }\n    return (\n      <QuestionFields\n        rules={rules}\n        form={form}\n        key={key}\n        index={key}\n        cascade={cascade}\n        field={field}\n      />\n    )\n  })\n}\n\nexport const Webform = ({ forms, onChange, onFinish, style }) => {\n  const [form] = Form.useForm()\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (fr, value, values) => {\n    const all = fr.getFieldsError().length\n    const filled = Object.keys(values)\n      .map((k) => values[k])\n      .filter((x) => x).length\n    if (onChange) {\n      onChange({\n        current: value,\n        values: values,\n        progress: (filled / all) * 100\n      })\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      layout='vertical'\n      name={forms.name}\n      scrollToFirstError='true'\n      onValuesChange={(value, values) =>\n        setTimeout(() => {\n          onValuesChange(form, value, values)\n        }, 100)\n      }\n      onFinish={onSubmit}\n      style={style}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} form={form} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport { Webform } from 'akvo-react-form'\nimport * as forms from './example.json'\nimport * as cascade from './example-cascade.json'\nimport 'akvo-react-form/dist/index.css'\n\nconst formData = {\n  ...forms.default,\n  cascade: { administration: cascade.default }\n}\n\nconst App = () => {\n  const onChange = (value) => {\n    console.log(value)\n  }\n  const onFinish = (values) => {\n    const data = Object.keys(values).map((v) => {\n      if (values[v]) {\n        return { question: parseInt(v), value: values[v] }\n      }\n      return false\n    })\n    console.log(data.filter((x) => x))\n  }\n  return (\n    <div>\n      <div className='half-width'>\n        <Webform\n          forms={formData}\n          onChange={onChange}\n          onFinish={onFinish}\n          style={{ fontSize: '30px' }}\n        />\n      </div>\n      <div className='half-width json-source'>\n        <ReactJson src={formData} theme='monokai' displayDataTypes={false} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}