{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Question","fields","cascade","key","name","f","label","direction","value","o","mode","style","width","options","sytle","row","Webform","forms","onChange","onFinish","layout","onValuesChange","values","console","title","g","span","type","htmlType","formData","administration","App","className","log","data","Object","keys","map","v","question","parseInt","table","filter","x","src","theme","displayDataTypes","ReactDOM","render","document","getElementById"],"mappings":"y8UAkBMA,EAAW,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OAAOD,EAAA,KAAW,qBAChB,kBAAC,IAAD,MAAWE,IAAX,EAAqBC,KAAMC,EAA3B,GAAiCC,MAAOD,EAAED,MACvCC,kBACC,kBAAC,IAAD,WACE,uBAAOE,UAAU,YACdF,EAAA,YAAa,qBACZ,uBAAOF,IAAP,EAAgBK,MAAOC,EAAEL,MACtBK,EAFS,WAOhB,mBAAAJ,EAAA,KACF,uBAAQK,KAAR,WAAwBC,MAAO,CAAEC,MAAO,SACrCP,EAAA,YAAa,qBACZ,kBAAC,IAAD,QAAeF,IAAf,EAAwBK,MAAOC,EAAEL,MAC9BK,EAFS,UAMd,YAAAJ,EAAA,KACF,uBAAUQ,QAASX,EAAQG,EAAD,UACxBA,gBACF,sBADEA,MAEA,WAAAA,EAAA,KACF,uBAAaS,MAAO,CAAEF,MAAO,UAC3B,SAAAP,EAAA,KACF,uBAAUU,IAAK,IAEf,uBAAOD,MAAO,CAAEF,MAAO,eAMlBI,EAAU,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACzC,GAAI,OAACF,QAAD,IAACA,MAAL,eACE,qBAiBF,OACE,uBACEG,OADF,WAEEhB,KAAMa,EAFR,KAGEI,eAVmB,SAACb,GACtB,GACEU,MASAC,SAnBa,SAACG,GAChB,EACEH,KAEAI,iBAWF,OAMGN,QANH,IAMGA,OANH,EAMGA,EAAA,oBAA0B,cACzB,OACE,uBAAMd,IAAN,EAAgBqB,MAAOC,oBAAqBtB,EAArBsB,IACrB,qBAAUxB,OAAQwB,EAAlB,SAA8BvB,QAASe,EAAMf,cAInD,2BACE,uBAAKwB,KAAM,IACT,2BACE,kBAAC,IAAD,UACE,uBAAQC,KAAR,UAAuBC,SAAS,UAlB5C,gB,kBClEIC,G,OAAQ,2BACTZ,GADS,IAEZf,QAAS,CAAE4B,eAAgB5B,MA4Bd6B,EAzBH,WAaV,OACE,6BACE,yBAAKC,UAAU,cACb,kBAAC,EAAD,CAASf,MAAOY,EAAUX,SAff,SAACV,GAChBe,QAAQU,IAAIzB,IAcsCW,SAZnC,SAACG,GAChB,IAAMY,EAAOC,OAAOC,KAAKd,GAAQe,KAAI,SAACC,GACpC,QAAIhB,EAAOgB,IACF,CAAEC,SAAUC,SAASF,GAAI9B,MAAOc,EAAOgB,OAIlDf,QAAQkB,MAAMP,EAAKQ,QAAO,SAACC,GAAD,OAAOA,UAO/B,yBAAKX,UAAU,0BACb,kBAAC,IAAD,CAAWY,IAAKf,EAAUgB,MAAM,UAAUC,kBAAkB,OCzBpEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.620ad98a.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  Space,\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  Radio,\n  Select,\n  DatePicker,\n  Cascader\n} from 'antd'\nimport 'antd/dist/antd.css'\nimport TextArea from 'antd/lib/input/TextArea'\n\nconst Question = ({ fields, cascade }) => {\n  return fields.map((f, key) => (\n    <Form.Item key={key} name={f.id} label={f.name}>\n      {f.type === 'option' ? (\n        <Radio.Group>\n          <Space direction='vertical'>\n            {f.option.map((o, io) => (\n              <Radio key={io} value={o.name}>\n                {o.name}\n              </Radio>\n            ))}\n          </Space>\n        </Radio.Group>\n      ) : f.type === 'multipleoption' ? (\n        <Select mode='multiple' style={{ width: '100%' }}>\n          {f.option.map((o, io) => (\n            <Select.Option key={io} value={o.name}>\n              {o.name}\n            </Select.Option>\n          ))}\n        </Select>\n      ) : f.type === 'cascade' ? (\n        <Cascader options={cascade[f.option]} />\n      ) : f.type === 'date' ? (\n        <DatePicker />\n      ) : f.type === 'number' ? (\n        <InputNumber sytle={{ width: '100%' }} />\n      ) : f.type === 'text' ? (\n        <TextArea row={4} />\n      ) : (\n        <Input sytle={{ width: '100%' }} />\n      )}\n    </Form.Item>\n  ))\n}\n\nexport const Webform = ({ forms, onChange, onFinish }) => {\n  if (!forms?.question_group) {\n    return 'Error Format'\n  }\n\n  const onSubmit = (values) => {\n    if (onFinish) {\n      onFinish(values)\n    } else {\n      console.log(values)\n    }\n  }\n\n  const onValuesChange = (value) => {\n    if (onChange) {\n      onChange(value)\n    }\n  }\n\n  return (\n    <Form\n      layout='vertical'\n      name={forms.name}\n      onValuesChange={onValuesChange}\n      onFinish={onSubmit}\n    >\n      {forms?.question_group.map((g, key) => {\n        return (\n          <Card key={key} title={g.name || `Section ${key + 1}`}>\n            <Question fields={g.question} cascade={forms.cascade} />\n          </Card>\n        )\n      })}\n      <Row>\n        <Col span={24}>\n          <Card>\n            <Form.Item>\n              <Button type='primary' htmlType='submit'>\n                Submit\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n","import React from 'react'\nimport ReactJson from 'react-json-view'\nimport { Webform } from 'akvo-react-form'\nimport * as forms from './example.json'\nimport * as cascade from './example-cascade.json'\nimport 'akvo-react-form/dist/index.css'\n\nconst formData = {\n  ...forms.default,\n  cascade: { administration: cascade.default }\n}\n\nconst App = () => {\n  const onChange = (value) => {\n    console.log(value)\n  }\n  const onFinish = (values) => {\n    const data = Object.keys(values).map((v) => {\n      if (values[v]) {\n        return { question: parseInt(v), value: values[v] }\n      }\n      return false\n    })\n    console.table(data.filter((x) => x))\n  }\n  return (\n    <div>\n      <div className='half-width'>\n        <Webform forms={formData} onChange={onChange} onFinish={onFinish} />\n      </div>\n      <div className='half-width json-source'>\n        <ReactJson src={formData} theme='monokai' displayDataTypes={false} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}